name: 'Publish Lambda Docker Imange'

on: 
  push: 
    branches:
      - rework
  pull_request:
  workflow_dispatch:
jobs:
  Cloudformation-checker:
    name: Check linting and security concerns
    runs-on: ubuntu-latest
    env:
      ACTIONS_RUNNER_DEBUG: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Read constants.json
        run: |
          # Read the constants.json file and extract the value of 'REGION'
          aws_region=$(jq -r '.REGION' constants.json)
          echo "The AWS region is: $aws_region"
          # Set the 'aws-region' variable for subsequent steps
          # echo "::set-env name=aws-region::$aws_region"
          echo "aws-region=$aws_region" >> "$GITHUB_OUTPUT"

      - name: Configure AWS Credentials and Constants 
        id: aws-deploy-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.ACCESS_KEY_SECRET }}
          aws-region: $aws-region

     # Deploy to AWS CloudFormation ECR Stack 
      - name: Create ECR Entity
        id: create-ecr-stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: lambda-deployment-stack
          template: cloudformation/ecr-repo-deploy-stack.yaml
          no-fail-on-empty-changeset: "1"
          capabilities: CAPABILITY_NAMED_IAM

    # Build Docker imange and publish to ECR 
      - name: Publish Lambda Docker Image
        if: success()
        run: |
            echo Building the Docker image...
            docker build -t processing-lambda:latest -f Dockerfile .
            AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
            docker tag processing-lambda:latest  $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/processing-ecr-repo:latest
            echo Build Tagged.....
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin  $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com
            docker push  $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/processing-ecr-repo
      
    # Deploy to AWS CloudFormation Stack that allocates resources 
      - name: Allocate AWS Resources
        id: create-resources-stack
        if: success()
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: resourcese-allocation-stack
          template: cloudformation/resource-management-stack.yaml
          no-fail-on-empty-changeset: "1"
          capabilities: CAPABILITY_NAMED_IAM